
/*
********************************************************************************************************************************************
* Function: DiCondition() - constructor
* Parameters: none
* Return: none
********************************************************************************************************************************************
*/
template <class T>
DiCondition<T>::DiCondition() : DiTask()
{
	m_pkTrueTask = NULL;
	m_pkFalseTask = NULL;
	m_eClassID = DICLASS_CONDITION; 
}
//***************************************************************************************************************************************************//

/*
********************************************************************************************************************************************
* Function: ~DiCondition() - virtual destructor
* Parameters: none
* Return: none
********************************************************************************************************************************************
*/
template <class T>
DiCondition<T>::~DiCondition()
{
}
//***************************************************************************************************************************************************//

/*
********************************************************************************************************************************************
* Function: SetRunTask() - set the task needs to run when this tasks condition is satisfy
* Parameters: none
* Return: none
********************************************************************************************************************************************
*/
template <class T>
void DiCondition<T>::SetRunTask(DiTask<T>* a_pkRunTask) 
{
	m_pkRunTask = a_pkRunTask;
}
//***************************************************************************************************************************************************//

/*
********************************************************************************************************************************************
* Function: SetFalseRunTask() - task that needs to execute if the condition isnt met
* Parameters: none
* Return: none
********************************************************************************************************************************************
*/
template <class T>
void DiCondition<T>::SetFalseRunTask(DiTask<T>* a_pkRunTask)
{
	m_pkRunTaskFalse = a_pkRunTask;
}
//***************************************************************************************************************************************************//
