
/*
********************************************************************************************************************************************
* Function: DiTask() - empty constructor
* Parameters: none
* Return: none
********************************************************************************************************************************************
*/
template <class T>
DiTask<T>::DiTask()
	: m_pkParentTask(NULL)
{
	m_zScriptFile.clear();
}


/*
********************************************************************************************************************************************
* Function: ~DiTask() - virtual destructor
* Parameters: none
* Return: none
********************************************************************************************************************************************
*/
template <class T>
DiTask<T>::~DiTask()
{
	m_zScriptFile.clear();
}
//***************************************************************************************************************************************************//

/*
********************************************************************************************************************************************
* Function: LoadScript() - load the lua script using the given file
* Parameters: const char* a_zScriptFile - lua script file that nees to be loading
* Return: bool - loading script successful (true) or not (false)
********************************************************************************************************************************************
*/
template <class T>
bool DiTask<T>::LoadScript(const char* a_zScriptFile)
{
	m_zScriptFile = a_zScriptFile;
	return true;
}
//***************************************************************************************************************************************************//

/*
********************************************************************************************************************************************
* Function: ReloadScript() - reload the current script to update script modification
* Parameters: void
* Return: void
********************************************************************************************************************************************
*/
template <class T>
void DiTask<T>::ReloadScript()
{
	//reload the script data, or execute a script

}
//***************************************************************************************************************************************************//

/*
********************************************************************************************************************************************
* Function: GetParent() - get the parent of this task
* Parameters: void
* Return: DiTask* - pointer to parent task of this
********************************************************************************************************************************************
*/
template <class T>
DiTask<T>* DiTask<T>::GetParent() const 
{
	return m_pkParentTask; 
}
//***************************************************************************************************************************************************//


/*
********************************************************************************************************************************************
* Function: SetParent() - set the parent node
* Parameters: const DiTask<T>* a_pkParentTask - pointer to parent class
* Return: void
********************************************************************************************************************************************
*/
template <class T>
void DiTask<T>::SetParent(const DiTask<T>* a_pkParentTask) 
{
	m_pkParentTask = a_pkParentTask;
}
//***************************************************************************************************************************************************//
